import pandas as pd

path = "/Users/uusuri/Documents/PycharmProjects/Education/coffee_stock.xlsx"

try:
    df = pd.read_excel(path)
except FileNotFoundError:
    print("No coffee stock found")
    exit()


def restock_items():
    print("\nüîπ –†–µ–∂–∏–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤:")
    print("–¢–µ–∫—É—â–∏–µ –æ—Å—Ç–∞—Ç–∫–∏:")
    print(df)

    items_input = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ").strip()
    items = [item.strip() for item in items_input.split(',') if item.strip()]

    amounts_input = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ").strip()
    amounts = [amount.strip() for amount in amounts_input.split(',') if amount.strip()]

    if len(items) != len(amounts):
        print("‚ùå –û—à–∏–±–∫–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —á–∏—Å–µ–ª!")
        return

    for item, amount_str in zip(items, amounts):
        try:
            amount = int(amount_str)
            if amount < 0:
                print(f"‚ö†Ô∏è –î–ª—è '{item}': –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º!")
                continue
        except ValueError:
            print(f"‚ùå –î–ª—è '{item}': –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!")
            continue

        if item not in df["–ù–∞–∑–≤–∞–Ω–∏–µ"].values:
            print(f"‚ùå –û—à–∏–±–∫–∞: '{item}' –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ!")
            continue

        index_of_row = df.index[df["–ù–∞–∑–≤–∞–Ω–∏–µ"] == item].tolist()[0]
        df.at[index_of_row, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"] = amount
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {item} ‚Üí {amount}")

    df.to_excel(path, index=False)
    print("\n–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏:")
    print(df)


def update_order():
    bill_summ = 0
    print("–¢–µ–∫—É—â–∏–µ –æ—Å—Ç–∞—Ç–∫–∏:")
    print(df)

    user_input = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–ø–∏—Ç–∫–∞ –∏–ª–∏ '–ü–æ–ø–æ–ª–Ω–∏—Ç—å': ").strip()

    if user_input.lower() == "–ø–æ–ø–æ–ª–Ω–∏—Ç—å":
        restock_items()
        return

    items_input = user_input
    items = [item.strip() for item in items_input.split(',') if item.strip()]

    amounts_input = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ").strip()
    amounts = [amount.strip() for amount in amounts_input.split(',') if amount.strip()]

    if len(items) != len(amounts):
        print("‚ùå –û—à–∏–±–∫–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —á–∏—Å–µ–ª!")
        return

    for item, amount_str in zip(items, amounts):
        try:
            amount = int(amount_str)
            if amount <= 0:
                print(f"‚ö†Ô∏è –î–ª—è '{item}': –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0!")
                continue
        except ValueError:
            print(f"‚ùå –î–ª—è '{item}': –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!")
            continue

        if item not in df["–ù–∞–∑–≤–∞–Ω–∏–µ"].values:
            print(f"‚ùå –û—à–∏–±–∫–∞: '{item}' –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ!")
            continue

        index_of_row = df.index[df["–ù–∞–∑–≤–∞–Ω–∏–µ"] == item].tolist()[0]

        if df.at[index_of_row, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"] < amount:
            print(f"‚ö†Ô∏è –î–ª—è '{item}': –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ! –û—Å—Ç–∞–ª–æ—Å—å: {df.at[index_of_row, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ']}")
            continue

        df.at[index_of_row, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"] -= amount
        bill_summ += df.at[index_of_row, "–°—Ç–æ–∏–º–æ—Å—Ç—å"] * amount
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {item} -{amount}. –û—Å—Ç–∞—Ç–æ–∫: {df.at[index_of_row, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ']}")

    print(f"\n–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {bill_summ}")
    df.to_excel(path, index=False)


def low_stock():
    res = {}
    for i in range(len(df["–ù–∞–∑–≤–∞–Ω–∏–µ"].tolist())):
        if df["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"].tolist()[i] <= 3:
            res.update({df["–ù–∞–∑–≤–∞–Ω–∏–µ"].tolist()[i]: df["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"].tolist()[i]})
    return str(res)


if __name__ == "__main__":
    update_order()
    print("\n–ò—Ç–æ–≥–æ–≤—ã–µ –æ—Å—Ç–∞—Ç–∫–∏:")
    print(df)